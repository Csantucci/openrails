diff --git a/Source/Documentation/Manual/driving.rst b/Source/Documentation/Manual/driving.rst
index 16320f4ff..2b9d470a5 100644
--- a/Source/Documentation/Manual/driving.rst
+++ b/Source/Documentation/Manual/driving.rst
@@ -839,9 +839,15 @@ As shown below, the basic red train label identifies the train.
 
 .. image:: images/timetable_tab1.png
 
-The "All" selection shows inactive and static trains too with labels in gray.
-Inactive trains are those that have arrived at their destination and been formed into departures
-but their start time has not arrived - see :ref:`#dispose commands<timetable-dispose>`.
+The "Active trains" selection shows trains that are currently delivering a service.
+
+The "All trains" selection also shows inactive and static trains with labels in dark red.
+
+Inactive trains are not part of a current service - i.e. their start time has not been reached or 
+they have arrived at their destination and not yet been re-formed for another service - see 
+:ref:`#dispose commands<timetable-dispose>`.
+
+Static trains do not move and are created with the $static command.
 
 .. raw:: latex
 
diff --git a/Source/RunActivity/Viewer3D/Debugging/DebugViewerForm.cs b/Source/RunActivity/Viewer3D/Debugging/DebugViewerForm.cs
index 59fdd9200..d472b4da6 100644
--- a/Source/RunActivity/Viewer3D/Debugging/DebugViewerForm.cs
+++ b/Source/RunActivity/Viewer3D/Debugging/DebugViewerForm.cs
@@ -2076,20 +2076,20 @@ private void btnSeeInGameClick(object sender, EventArgs e)
 
         private void bBackgroundColor_Click(object sender, EventArgs e)
         {
-			// Can't just do this as the watchdog time trips and returns OR back to the Menu.exe.
+			// Can't just use a dialog as the watchdog timer trips and returns OR back to the Menu.exe.
 			//if (cdBackground.ShowDialog() == DialogResult.OK)
 			//{
 			//	pbCanvas.BackColor = cdBackground.Color;
 			//}
 
-			// As an alternative, cycle through 3 pale colours
+			// As an alternative, cycle through 3 non-white backgrounds
 			if (pbCanvas.BackColor == Color.White)
+				pbCanvas.BackColor = Color.FromArgb(64, 128, 128);
+			else if (pbCanvas.BackColor == Color.FromArgb(64, 128, 128))
 				pbCanvas.BackColor = Color.FromArgb(250, 234, 209);
 			else if (pbCanvas.BackColor == Color.FromArgb(250, 234, 209))
 				pbCanvas.BackColor = Color.FromArgb(250, 240, 230);
 			else if (pbCanvas.BackColor == Color.FromArgb(250, 240, 230)) // Windows color "linen"
-				pbCanvas.BackColor = Color.FromArgb(250, 249, 242);
-			else if (pbCanvas.BackColor == Color.FromArgb(250, 249, 242))
 				pbCanvas.BackColor = Color.White;
 		}
 
diff --git a/Source/RunActivity/Viewer3D/Debugging/TimetableWindow.cs b/Source/RunActivity/Viewer3D/Debugging/TimetableWindow.cs
index 4b64ed3a1..65029e4d7 100644
--- a/Source/RunActivity/Viewer3D/Debugging/TimetableWindow.cs
+++ b/Source/RunActivity/Viewer3D/Debugging/TimetableWindow.cs
@@ -127,7 +127,7 @@ private void SetTimetableMedia()
 			F.PlatformFont = new Font("Segoe UI Semibold", 10, FontStyle.Regular);
 			F.SignalFont = new Font("Segoe UI Semibold", 10, FontStyle.Regular);
 			F.trainBrush = new SolidBrush(Color.Red);
-			F.InactiveTrainBrush = new SolidBrush(Color.DarkGray);
+			F.InactiveTrainBrush = new SolidBrush(Color.DarkRed);
 			F.sidingBrush = new SolidBrush(Color.Blue);
 			F.PlatformBrush = new SolidBrush(Color.DarkBlue);
 			F.SignalBrush = new SolidBrush(Color.DarkRed);
@@ -295,30 +295,30 @@ public void GenerateTimetableView(bool dragging = false)
 
 				if (dragging == false)
 				{
+					// Draw trains and path
+					DrawTrains(g, scaledA, scaledB);
+
 					// Keep widgetWidth <= 15 pixels
 					var widgetWidth = Math.Min(penWidth * 6, 15);
 
+					// Draw signals on top of path so they are easier to see.
+					F.signalItemsDrawn.Clear();
+					ShowSignals(g, scaledB, widgetWidth);
+
 					// Draw switches
 					F.switchItemsDrawn.Clear();
 					ShowSwitches(g, widgetWidth);
-
-					// Draw labels for sidings and platforms
+					
+					// Draw labels for sidings and platforms last so they go on top for readability
 					CleanTextCells();  // Empty the listing of labels ready for adding labels again
 					ShowPlatformLabels(g); // Platforms take priority over sidings and signal states
 					ShowSidingLabels(g);
-
-					// Draw signals
-					F.signalItemsDrawn.Clear();
-					ShowSignals(g, scaledB, widgetWidth);
-
-					// Draw trains
-					DrawTrains(g, scaledA, scaledB);
 				}
-
 				DrawZoomTarget(g);
 			}
 			F.pbCanvas.Invalidate(); // Triggers a re-paint
 		}
+
 		/// <summary>
 		/// Indicates the location around which the image is zoomed.
 		/// If user drags an item of interest into this target box and zooms in, the item will remain in view.
@@ -419,14 +419,14 @@ private void ShowSignals(Graphics g, PointF scaledB, float width)
 					s.Location2D.X = scaledItem.X; s.Location2D.Y = scaledItem.Y;
 					if (s.Signal.isSignalNormal())
 					{
-						var color = Brushes.Green;
+						var color = Brushes.Lime; // bright colour for readability
 						var pen = F.greenPen;
 						if (s.IsProceed == 0)
 						{
 						}
 						else if (s.IsProceed == 1)
 						{
-							color = Brushes.Orange;
+							color = Brushes.Yellow; // bright colour for readbility
 							pen = F.orangePen;
 						}
 						else
@@ -645,16 +645,6 @@ private void DrawTrains(Graphics g, PointF scaledA, PointF scaledB)
 			}
 		}
 
-        //private void BuildSelectedTrainList(Simulation.AIs.AITrain t)
-        //{
-        //	if (F.rbShowAllTrains.Checked)
-        //		F.selectedTrainList.Add(t);
-
-        //	if (F.rbShowActiveTrains.Checked)
-        //		if (IsActiveTrain(t))
-        //			F.selectedTrainList.Add(t);
-        //}
-
         private void BuildSelectedTrainList(Train t)
         {
             if (F.rbShowAllTrains.Checked)
@@ -683,7 +673,7 @@ private void ShowTrainNameAndState(Graphics g, PointF scaledItem, Train t, strin
 				if (tTTrain != null)
 				{
 					// Remove name of timetable, e.g.: ":SCE"
-					var lastPos = t.Name.LastIndexOf(":");
+					var lastPos = trainName.LastIndexOf(":");
 					var shortName = (lastPos > 0) ? trainName.Substring(0, lastPos) : trainName;
 
 					if (IsActiveTrain(tTTrain))
@@ -705,14 +695,14 @@ private void ShowTrainNameAndState(Graphics g, PointF scaledItem, Train t, strin
 							g.DrawString($"{shortName} {statuses}", F.trainFont, F.trainBrush, scaledItem);
 						}
 						else
-							g.DrawString($"{shortName}", F.trainFont, F.trainBrush, scaledItem);
+							g.DrawString(shortName, F.trainFont, F.trainBrush, scaledItem);
 					}
 					else
-						g.DrawString($"{shortName}", F.trainFont, F.InactiveTrainBrush, scaledItem);
+						g.DrawString(shortName, F.trainFont, F.InactiveTrainBrush, scaledItem);
 				}
 			}
 			else
-				g.DrawString($"{trainName}", F.trainFont, F.trainBrush, scaledItem);
+				g.DrawString(trainName, F.trainFont, F.trainBrush, scaledItem);
 		}
 
 		/*
